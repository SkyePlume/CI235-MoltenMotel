//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MoltenMotelLib {
    public class Room {
        Random rand = new Random();
        private int temp;
        public eRoomTemp roomStatus { get; private set; }
        public Boolean onFire { get; set; }
        public Boolean truckPresent { get; set; }
        public int roomID { get; private set; }
        public int roomTemp {
            get { return temp; }
            set {
                temp = value;
                if (temp < (int)eRoomTemp.DANGER) {
                    roomStatus = eRoomTemp.SAFE;
                } else if (temp < (int)eRoomTemp.SMOULDER) {
                    roomStatus = eRoomTemp.DANGER;
                    Console.WriteLine("DANGER!!! Room " + roomID + " is now on Fire!!");
                } else if (temp < (int)eRoomTemp.FIRE) {
                    roomStatus = eRoomTemp.SMOULDER;
                } else if (temp < (int)eRoomTemp.BURNEDOUT) {
                    roomStatus = eRoomTemp.FIRE;
                } else {
                    roomStatus = eRoomTemp.BURNEDOUT;
                }
                if (temperatureChangeEvent != null) {
                    temperatureChangeEvent(temp);
                }
            }
        }
        public TemperatureChangeHandler temperatureChangeEvent;

        

        public void onTemperatureChange(int temp) {
            if (roomStatus.Equals(eRoomTemp.BURNEDOUT)) {
                onFire = false;
                return;
            }
            if (roomTemp < 20) {
                onFire = false;
                return;
            }
            if (temp >= 150) {
                onFire = true;
            }

        }

        public Room(int rID, int randTemp) {
            roomID = rID;
            onFire = false;
            truckPresent = false;
            roomTemp = randTemp;
        }
        
        public void tick() {
            if (onFire) {
                roomTemp += 20;
            }
            if (roomTemp < 20) {
                truckPresent = false;
            }
            if (truckPresent) {
                roomTemp -= 40;
            }
            if (roomStatus.Equals(eRoomTemp.BURNEDOUT)) {
                onFire = false;
                truckPresent = false;
                return;
            }
            if (roomTemp < 20) {
                onFire = false;
                return;
            }
        }

    }
}